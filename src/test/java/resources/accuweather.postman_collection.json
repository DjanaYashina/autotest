{
	"info": {
		"_postman_id": "50608fa0-990e-40cc-bb32-9788ef915794",
		"name": "accuweather",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33622239"
	},
	"item": [
		{
			"name": "GetLocation",
			"item": [
				{
					"name": "Autocomplete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Count object = \" + pm.response.json().length, function () {\r",
									"    pm.expect(pm.response.json().length).to.equal(10);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Key).to.eql(\"294021\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].LocalizedName).to.eql(\"Moscow\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Country.ID).to.eql(\"RU\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Country.LocalizedName).to.eql(\"Russia\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/cities/autocomplete?q=Moscow",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"cities",
								"autocomplete"
							],
							"query": [
								{
									"key": "q",
									"value": "Moscow"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CitySearch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Key).to.eql(\"294021\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].LocalizedName).to.eql(\"Moscow\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Country.ID).to.eql(\"RU\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].Country.LocalizedName).to.eql(\"Russia\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/cities/search?q=Moscow",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"cities",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "Moscow"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CountryListAsia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].LocalizedName).to.eql(\"Afghanistan\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/countries/ASI",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"countries",
								"ASI"
							]
						}
					},
					"response": []
				},
				{
					"name": "CountryListEurope",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[1].LocalizedName).to.eql(\"Albania\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/countries/EUR",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"countries",
								"EUR"
							]
						}
					},
					"response": []
				},
				{
					"name": "RegionList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[5].LocalizedName).to.eql(\"Europe\");\r",
									"});\r",
									"\t\t\t\t\t\t\t\r",
									"pm.test('Count object = ' + pm.response.json().length, function () {\r",
									"    pm.expect(pm.response.json().length).to.equal(10);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/regions",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"regions"
							]
						}
					},
					"response": []
				},
				{
					"name": "TopCitiesList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"}),\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Dhaka\");\r",
									"}),\r",
									"pm.test('Count object = ' + pm.response.json().length, function () {\r",
									"    pm.expect(pm.response.json().length).to.equal(50);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/topcities/50",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"topcities",
								"50"
							]
						}
					},
					"response": []
				},
				{
					"name": "TopCitiesListWithDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"}),\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Dhaka\");\r",
									"}),\r",
									"pm.test('Count object = ' + pm.response.json().length, function () {\r",
									"    pm.expect(pm.response.json().length).to.equal(50);\r",
									"});\r",
									"pm.test(\"Top Cities List have details\", function () {\r",
									"    pm.expect(pm.response.json().include(\"Details\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/topcities/50?details=true",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"topcities",
								"50"
							],
							"query": [
								{
									"key": "details",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GeopositionSearch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().ParentCity.Key).to.eql(\"294021\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().AdministrativeArea.LocalizedName).to.eql(\"Moscow\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().Country.ID).to.eql(\"RU\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().Country.LocalizedName).to.eql(\"Russia\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?q=55.75,37.61",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"cities",
								"geoposition",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "55.75,37.61"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GeopositionSearchWithDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().ParentCity.Key).to.eql(\"294021\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().AdministrativeArea.LocalizedName).to.eql(\"Moscow\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().Country.ID).to.eql(\"RU\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().Country.LocalizedName).to.eql(\"Russia\");\r",
									"});\r",
									"pm.test(\"Geoposition have details\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"Details\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?q=55.75,37.61&details=true",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"cities",
								"geoposition",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "55.75,37.61"
								},
								{
									"key": "details",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GeopositionSearchWithDetailsAndToplevel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().AdministrativeArea.LocalizedName).to.eql(\"Moscow\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().Country.ID).to.eql(\"RU\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().Country.LocalizedName).to.eql(\"Russia\");\r",
									"});\r",
									"pm.test(\"City in the highest rank\", function () {\r",
									"    pm.expect(pm.response.json().Rank).to.be.below(15);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?q=55.75,37.61&details=true&toplevel=true",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"locations",
								"v1",
								"cities",
								"geoposition",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "55.75,37.61"
								},
								{
									"key": "details",
									"value": "true"
								},
								{
									"key": "toplevel",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GetWeather",
			"item": [
				{
					"name": "OneDayMoscow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Count object = \" + pm.response.json().length, function () {\r",
									"    pm.expect(pm.response.json().DailyForecasts.length).to.equal(1);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().Headline.Category).to.eql(\"rain\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/forecasts/v1/daily/1day/294021",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"forecasts",
								"v1",
								"daily",
								"1day",
								"294021"
							]
						}
					},
					"response": []
				},
				{
					"name": "OneDaySamara",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Count object = \" + pm.response.json().length, function () {\r",
									"    pm.expect(pm.response.json().DailyForecasts.length).to.equal(1);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().Headline.Category).to.eql(\"rain\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/forecasts/v1/daily/1day/290396",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"forecasts",
								"v1",
								"daily",
								"1day",
								"290396"
							]
						}
					},
					"response": []
				},
				{
					"name": "TenDaysMoscow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Check  message_message\", function () {\r",
									"    pm.expect(pm.response.json().Message).to.eql(\"Api Authorization failed\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/forecasts/v1/daily/10day/294021",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"forecasts",
								"v1",
								"daily",
								"10day",
								"294021"
							]
						}
					},
					"response": []
				},
				{
					"name": "FifteenDays",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Check  message_message\", function () {\r",
									"    pm.expect(pm.response.json().Message).to.eql(\"Api Authorization failed\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/forecasts/v1/daily/15day/294021",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"forecasts",
								"v1",
								"daily",
								"15day",
								"294021"
							]
						}
					},
					"response": []
				},
				{
					"name": "FiveDaysMoscow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Count object = \" + pm.response.json().length, function () {\r",
									"    pm.expect(pm.response.json().DailyForecasts.length).to.equal(5);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().Headline.Text).to.equal(\"Expect showers Friday\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/forecasts/v1/daily/5day/294021",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"forecasts",
								"v1",
								"daily",
								"5day",
								"294021"
							]
						}
					},
					"response": []
				},
				{
					"name": "FiveDaysSamara",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Count object = \" + pm.response.json().length, function () {\r",
									"    pm.expect(pm.response.json().DailyForecasts.length).to.equal(5);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json().Headline.Text).to.equal(\"Expect showers Friday\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/forecasts/v1/daily/5day/290396",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"forecasts",
								"v1",
								"daily",
								"5day",
								"290396"
							]
						}
					},
					"response": []
				},
				{
					"name": "OneHour",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Count object = \" + pm.response.json().length, function () {\r",
									"    pm.expect(pm.response.json().length).to.equal(1);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].IconPhrase).to.eql(\"Sunny\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/forecasts/v1/hourly/1hour/294021",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"forecasts",
								"v1",
								"hourly",
								"1hour",
								"294021"
							]
						}
					},
					"response": []
				},
				{
					"name": "TwelveHours",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Count object = \" + pm.response.json().length, function () {\r",
									"    pm.expect(pm.response.json().length).to.equal(12);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.json()[0].IconPhrase).to.eql(\"Partly sunny\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/forecasts/v1/hourly/12hour/294021",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"forecasts",
								"v1",
								"hourly",
								"12hour",
								"294021"
							]
						}
					},
					"response": []
				},
				{
					"name": "TwentyFourHours",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Check  message_message\", function () {\r",
									"    pm.expect(pm.response.json().Message).to.eql(\"Api Authorization failed\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/forecasts/v1/hourly/24hour/294021",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"forecasts",
								"v1",
								"hourly",
								"24hour",
								"294021"
							]
						}
					},
					"response": []
				},
				{
					"name": "SeventyTwoHours",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Check  message_message\", function () {\r",
									"    pm.expect(pm.response.json().Message).to.eql(\"Api Authorization failed\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dataservice.accuweather.com/forecasts/v1/hourly/72hour/294021",
							"protocol": "http",
							"host": [
								"dataservice",
								"accuweather",
								"com"
							],
							"path": [
								"forecasts",
								"v1",
								"hourly",
								"72hour",
								"294021"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "3dGfUJSFG8PfVXo4LG76qkpuSk2wrhbH",
				"type": "string"
			},
			{
				"key": "in",
				"value": "query",
				"type": "string"
			},
			{
				"key": "key",
				"value": "apikey",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "api-key-my",
			"value": "3dGfUJSFG8PfVXo4LG76qkpuSk2wrhbH",
			"type": "string"
		}
	]
}